kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: efs-sc
provisioner: efs.csi.aws.com
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: efs-pv
spec:
  capacity: 
    storage: 5Gi #size does not matter accordingto documentation
  volumeMode: Filesystem #As we are using EFS
  accessModes:
    - ReadWriteMany #type we need to access the EFS
  storageClassName: efs-sc
  csi:
    driver: efs.csi.aws.com #add thedriver used 
    volumeHandle: fs-59d14521 #type the file system id creatd on EFS pane
---
apiVersion: v1
kind: PersistentVolumeClaim #creating a claim
metadata:
  name: efs-pvc
spec:
  accessModes:
    - ReadWriteMany #access modes
  storageClassName: efs-sc #storage class
  resources:
    requests:
      storage: 5Gi #claim is created
---
apiVersion: v1
kind: Service
metadata:
  name: users-service
spec:
  selector:
    app: users
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: users-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: users
  template:
    metadata:
      labels:
        app: users
    spec:
      containers:
        - name: users-api
          image: academind/kub-dep-users:latest
          env:
            - name: MONGODB_CONNECTION_URI
              value: 'mongodb+srv://maximilian:wk4nFupsbntPbB3l@cluster0.ntrwp.mongodb.net/users?retryWrites=true&w=majority'
            - name: AUTH_API_ADDRESSS
              value: 'auth-service.default:3000'
          volumeMounts:
            - name: efs-vol
              mountPath: /app/users #path inside of contianer. users is empty folder created. whwere we would be wrtting to
      volumes: #Generic was of persistent volume claim definition to the pod
        - name: efs-vol
          persistentVolumeClaim: 
            claimName: efs-pvc
